{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storgaeService","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","className","type","value","onChange","target","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccout","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","placeholder","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6daa8f40.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storgaeService = firebase.storage();","import React, { useEffect, useState }  from 'react';\r\nimport { authService, dbService } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n                            .collection(\"nweets\")\r\n                            .where(\"creatorId\", \"==\", userObj.uid)\r\n                            .orderBy(\"createdAt\")\r\n                            .get();\r\n        console.log(nweets.docs.map(doc => doc.data()))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    const onChange = (event) => {\r\n        const { target: {value},} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n\r\n            refreshUser();\r\n        }\r\n    }\r\n    return ( \r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" value={newDisplayName} onChange={onChange} autoFocus />\r\n                <input type=\"submit\" value=\"update profile\" className=\"formBtn\" \r\n                    style={{\r\n                        marginTop: 10,\r\n                    }} \r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccout] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccout((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input type=\"email\" name=\"email\" className=\"authInput\" placeholder=\"email\" value={email} \r\n                    onChange={onChange} required />\r\n                <input type=\"password\" name=\"password\" className=\"authInput\" placeholder=\"password\" value={password} \r\n                    onChange={onChange} required />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n\r\n","import { dbService, storgaeService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        if(window.confirm(\"delete?\")){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storgaeService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: { value }} = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (                    \r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input value={newNweet} required onChange={onChange} />\r\n                        <input type=\"submit\" value=\"update\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">cancel</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && \r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { dbService, storgaeService } from 'fbase';\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = storgaeService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: {value},} = event;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const { \r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: {result}} = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from 'fbase';\r\nimport React, {useEffect, useState} from 'react';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const getNweets = async() => {\r\n        const dbNweets = await dbService.collection(\"nweets\").get();\r\n        dbNweets.forEach((document) => {\r\n            const nweetObject = {\r\n                ...document.data(),\r\n                id: document.id,\r\n            }\r\n                setNweets((prev) => [nweetObject, ...prev]);\r\n            });\r\n    }\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data(),}));\r\n            setNweets(nweetArray)\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div  style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet)=> (                    \r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                    >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigtion from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigtion userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Redirect from='*' to='/' />\r\n                    </div> : \r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}